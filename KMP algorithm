def strStr(haystack, needle):
    if not needle:
        return 0

    def build_prefix_table(pattern):
        m = len(pattern)
        lps = [0] * m
        j = 0
        i = 1

        while i < m:
            if pattern[i] == pattern[j]:
                j += 1
                lps[i] = j
                i += 1
            else:
                if j != 0:
                    j = lps[j - 1]
                else:
                    lps[i] = 0
                    i += 1

        return lps

    lps = build_prefix_table(needle)
    n = len(haystack)
    m = len(needle)
    i = 0
    j = 0

    while i < n:
        if needle[j] == haystack[i]:
            i += 1
            j += 1

        if j == m:
            return i - j

        elif i < n and needle[j] != haystack[i]:
            if j != 0:
                j = lps[j - 1]
            else:
                i += 1

    return -1
